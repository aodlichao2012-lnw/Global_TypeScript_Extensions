Angular มีเหตุการณ์ต่างๆ มากมายที่สามารถใช้เพื่อตอบสนองต่อการ
กระทำของผู้ใช้หรือเหตุการณ์อื่นๆ ในแอปพลิเคชัน เหตุการณ์เหล่านี้สามารถแบ่งออกเป็นสองประเภทหลักๆ คือ:

เหตุการณ์ DOM เหตุการณ์เหล่านี้เป็นเหตุการณ์มาตรฐานของ DOM ที่ Angular รองรับ
เหตุการณ์ Angular เหตุการณ์เหล่านี้เป็นเหตุการณ์เฉพาะของ Angular ที่สร้างขึ้นโดย Angular
เหตุการณ์ DOM บางอย่างที่ Angular รองรับ ได้แก่:

click เหตุการณ์นี้จะเรียกเมื่อผู้ใช้คลิกองค์ประกอบ
keydown เหตุการณ์นี้จะเรียกเมื่อผู้ใช้กดแป้นพิมพ์
mouseover เหตุการณ์นี้จะเรียกเมื่อผู้ใช้เลื่อนเมาส์เหนือองค์ประกอบ
เหตุการณ์ Angular บางอย่างที่ Angular รองรับ ได้แก่:

ngSubmit เหตุการณ์นี้จะเรียกเมื่อผู้ใช้ส่งฟอร์ม
ngModelChange เหตุการณ์นี้จะเรียกเมื่อค่าของอินพุตแบบฟอร์มเปลี่ยนแปลง
ngClick เหตุการณ์นี้จะเรียกเมื่อผู้ใช้คลิกองค์ประกอบที่ใช้ directive ngClick
นอกจากนี้ Angular ยังมีเหตุการณ์ที่กำหนดเองที่สามารถสร้างได้โดยผู้พัฒนาแอปพลิเคชัน
 เหตุการณ์ที่กำหนดเองเหล่านี้สามารถสร้างขึ้นโดยใช้ directive ngOnInit()

ตัวอย่างการใช้เหตุการณ์ใน Angular มีดังนี้:

<input type="text" [(ngModel)]="name" (ngModelChange)="onNameChange()">

โค้ดด้านบนจะสร้างอินพุตแบบฟอร์มที่มีชื่อ "name" เมื่อผู้ใช้เปลี่ยนค่าของอินพุตแบบฟอร์ม
 เหตุการณ์ ngModelChange จะเรียกและฟังก์ชัน onNameChange() จะถูกเรียก

export class AppComponent {
  name = "";

  onNameChange() {
    // Do something with the new value of the name property
  }
}

ngClick หรือ event ที่มาจาก Angular ใช้งานอย่างไรและมีอะไรบ้าง


ngClick เป็น directive ใน Angular ที่ใช้สำหรับจับเหตุการณ์คลิก (click event) ขององค์ประกอบ HTML

รูปแบบการใช้ ngClick มีดังนี้

<button (ngClick)="myFunction()">Click Me!</button>

โค้ดด้านบนจะสร้างปุ่มที่มีชื่อ "Click Me!" เมื่อผู้ใช้คลิกปุ่ม เหตุการณ์ ngClick 
จะเรียกและฟังก์ชัน myFunction() จะถูกเรียก

export class AppComponent {

  myFunction() {
    // Do something when the button is clicked
  }

}


ngClick เป็น directive ใน Angular ที่ใช้สำหรับจับเหตุการณ์คลิก (click event)
 ขององค์ประกอบ HTML

รูปแบบการใช้ ngClick มีดังนี้

HTML
<button (ngClick)="myFunction()">Click Me!</button>
โปรดใช้โค้ดด้วยความระมัดระวัง ดูข้อมูลเพิ่มเติม
โค้ดด้านบนจะสร้างปุ่มที่มีชื่อ "Click Me!" เมื่อผู้ใช้คลิกปุ่ม เหตุการณ์ ngClick
 จะเรียกและฟังก์ชัน myFunction() จะถูกเรียก

TypeScript
export class AppComponent {

  myFunction() {
    // Do something when the button is clicked
  }

}
โปรดใช้โค้ดด้วยความระมัดระวัง ดูข้อมูลเพิ่มเติม
ฟังก์ชัน myFunction() สามารถทำได้ทุกอย่างที่ต้องการ เช่น แสดงข้อความแจ้งบนหน้าจอ
 หรือส่งคำขอไปยังเซิร์ฟเวอร์

เหตุการณ์ Angular อื่นๆ บางส่วน ได้แก่:

ngSubmit เหตุการณ์นี้จะเรียกเมื่อผู้ใช้ส่งฟอร์ม
ngModelChange เหตุการณ์นี้จะเรียกเมื่อค่าของอินพุตแบบฟอร์มเปลี่ยนแปลง
ngBlur เหตุการณ์นี้จะเรียกเมื่อผู้ใช้เบลออินพุตแบบฟอร์ม
ngFocus เหตุการณ์นี้จะเรียกเมื่อผู้ใช้โฟกัสอินพุตแบบฟอร์ม
ngChange เหตุการณ์นี้จะเรียกเมื่อค่าขององค์ประกอบ HTML เปลี่ยนแปลง
ngKeyUp เหตุการณ์นี้จะเรียกเมื่อผู้ใช้กดปุ่มบนแป้นพิมพ์
ngKeyDown เหตุการณ์นี้จะเรียกเมื่อผู้ใช้ปล่อยปุ่มบนแป้นพิมพ์
ngMouseOver เหตุการณ์นี้จะเรียกเมื่อผู้ใช้เลื่อนเมาส์เหนือองค์ประกอบ HTML
ngMouseOut เหตุการณ์นี้จะเรียกเมื่อผู้ใช้เลื่อนเมาส์ออกจากองค์ประกอบ HTML

เหตุการณ์ Angular สามารถจับเหตุการณ์ต่างๆ ที่เกิดขึ้นในแอปพลิเคชัน Angular 
ช่วยให้ผู้พัฒนาสามารถตอบสนองต่อการกระทำของผู้ใช้หรือเหตุการณ์อื่นๆ ในแอปพลิเคชันได้

ตัวอย่างการใช้เหตุการณ์ Angular อื่นๆ มีดังนี้:

<form (ngSubmit)="onSubmit()">
  <input type="text" [(ngModel)]="name">
  <button type="submit">Submit</button>
</form>

โค้ดด้านบนจะสร้างฟอร์มที่มีอินพุตแบบฟอร์มชื่อ "name" เมื่อผู้ใช้คลิกปุ่ม "Submit"
 เหตุการณ์ ngSubmit จะเรียกและฟังก์ชัน onSubmit() จะถูกเรียก

export class AppComponent {

  name = "";

  onSubmit() {
    // Do something with the name value
  }

}

ฟังก์ชัน onSubmit() สามารถทำได้ทุกอย่างที่ต้องการ เช่น
 บันทึกค่าของ name ลงในฐานข้อมูล หรือแสดงข้อความแจ้งบนหน้าจอ

การใช้เหตุการณ์ Angular จะช่วยให้แอปพลิเคชัน Angular
 ของคุณตอบสนองต่อการกระทำของผู้ใช้หรือเหตุการณ์อื่นๆ ในแอปพลิเคชันได้
